[{"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\index.tsx":"1","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\reportWebVitals.ts":"2","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\App.tsx":"3","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Header\\Header.tsx":"4","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\Profile.tsx":"5","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Dialogs\\Dialogs.tsx":"6","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Navbar\\Navbar.tsx":"7","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"8","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"9","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"10","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Dialogs\\Message\\Message.tsx":"11","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"12","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\store.tsx":"13","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Navbar\\NavbarItem\\NavbarItem.tsx":"14","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\render.tsx":"15","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\profile-reducer.tsx":"16","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\dialogs-reducer.tsx":"17","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\sidebar-reducer.tsx":"18","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\redux-store.tsx":"19","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"20","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx":"21","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\users-reducer.tsx":"22","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Users\\UsersContainer.tsx":"23","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Users\\Users.tsx":"24"},{"size":750,"mtime":1617093111117,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":2335,"mtime":1617264205740,"results":"28","hashOfConfig":"26"},{"size":299,"mtime":1612791700850,"results":"29","hashOfConfig":"26"},{"size":333,"mtime":1617058764600,"results":"30","hashOfConfig":"26"},{"size":1555,"mtime":1617055481137,"results":"31","hashOfConfig":"26"},{"size":498,"mtime":1613853829278,"results":"32","hashOfConfig":"26"},{"size":387,"mtime":1613235458400,"results":"33","hashOfConfig":"26"},{"size":1293,"mtime":1616618963609,"results":"34","hashOfConfig":"26"},{"size":423,"mtime":1617094807510,"results":"35","hashOfConfig":"26"},{"size":229,"mtime":1613737817931,"results":"36","hashOfConfig":"26"},{"size":426,"mtime":1613854470015,"results":"37","hashOfConfig":"26"},{"size":4192,"mtime":1616576268288,"results":"38","hashOfConfig":"26"},{"size":389,"mtime":1613853830199,"results":"39","hashOfConfig":"26"},{"size":510,"mtime":1614789180048,"results":"40","hashOfConfig":"26"},{"size":1246,"mtime":1617192876139,"results":"41","hashOfConfig":"26"},{"size":2390,"mtime":1617096788704,"results":"42","hashOfConfig":"26"},{"size":661,"mtime":1617265738400,"results":"43","hashOfConfig":"26"},{"size":1055,"mtime":1617263710825,"results":"44","hashOfConfig":"26"},{"size":1138,"mtime":1617058764527,"results":"45","hashOfConfig":"26"},{"size":1092,"mtime":1617058764470,"results":"46","hashOfConfig":"26"},{"size":1390,"mtime":1617357301805,"results":"47","hashOfConfig":"26"},{"size":1088,"mtime":1617264205340,"results":"48","hashOfConfig":"26"},{"size":1642,"mtime":1617358413595,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"zntbtv",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\index.tsx",[],["104","105"],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\reportWebVitals.ts",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\App.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Header\\Header.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\Profile.tsx",["106"],"import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nexport function Profile() {\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Navbar\\Navbar.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",["107","108"],"import React, {ChangeEvent} from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {PostType} from \"../../../App\";\r\nimport {ActionsTypes} from \"../../../Redux/redux-store\";\r\nimport {addPostActionCreator, updatePostActionCreator} from \"../../../Redux/profile-reducer\";\r\n\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostType>\r\n    updateNewPostText: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    addPost: () => void\r\n    newPostText: string\r\n}\r\nexport function MyPosts(props: MyPostsPropsType) {\r\n    const postsElements = props.posts.map(p => <Post id={p.id} message={p.message} likes={p.likes}/>)\r\n\r\n    const addPost = () => {\r\n            props.addPost()\r\n    }\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            props.updateNewPostText(e)\r\n    }\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea value={props.newPostText}\r\n                              onChange={onPostChange}\r\n                              onKeyPress={ (e) => {if (e.key === 'Enter') {addPost()}}}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n)\r\n}","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Dialogs\\Message\\Message.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\store.tsx",["109"],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Navbar\\NavbarItem\\NavbarItem.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\render.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\profile-reducer.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\dialogs-reducer.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\sidebar-reducer.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\redux-store.tsx",[],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["110"],"import React, {ChangeEvent} from \"react\";\r\nimport {\r\n    addPostActionCreator,\r\n    PostType,\r\n    updatePostActionCreator\r\n} from \"../../../Redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport {AppStateType} from \"../../../Redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: PostType[]\r\n    newPostText: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: () => void\r\n    updateNewPostText: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            dispatch(updatePostActionCreator(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts)","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx",["111"],"import React, {ChangeEvent} from \"react\";\r\nimport {\r\n    InitialStateDialogsType,\r\n    sendMessageActionCreator,\r\n    updateMessageActionCreator\r\n} from \"../../Redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport { Dispatch } from \"redux\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    state: InitialStateDialogsType\r\n}\r\ntype MapDispatchPropsType = {\r\n    sendMessage: () => void\r\n    updateMessage: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        state: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageActionCreator())\r\n        },\r\n        updateMessage: (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            dispatch(updateMessageActionCreator(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect (mapStateToProps, mapDispatchToProps) (Dialogs)","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\Redux\\users-reducer.tsx",["112"],"import {ActionsTypes} from \"./redux-store\";\r\nimport {ChangeEvent} from \"react\";\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string | null\r\n    photos: {small: string | null, large: string }\r\n    status: string | null\r\n    followed: boolean\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as UserType[]\r\n}\r\n\r\nexport type InitialStateUsersType = typeof initialState\r\n\r\nexport const usersReducer = (state: InitialStateUsersType = initialState, action: ActionsTypes): InitialStateUsersType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userID ? {...u, followed: true} : u),\r\n            }\r\n        case \"UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userID ? {...u, followed: false} : u),\r\n            }\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userID: number) => ({type: \"FOLLOW\", userID}) as const\r\nexport const unfollowAC = (userID: number) => ({type: \"UNFOLLOW\", userID}) as const\r\nexport const setUsersAC = (users: UserType[]) => ({type: \"SET_USERS\", users}) as const\r\n","F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Users\\UsersContainer.tsx",["113"],"F:\\it-incubator\\react-way\\projects\\01-project\\social-network\\src\\components\\Users\\Users.tsx",["114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":9},{"ruleId":"119","severity":1,"message":"123","line":6,"column":9,"nodeType":"121","messageId":"122","endLine":6,"endColumn":29},{"ruleId":"119","severity":1,"message":"124","line":6,"column":31,"nodeType":"121","messageId":"122","endLine":6,"endColumn":54},{"ruleId":"119","severity":1,"message":"125","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"125","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"125","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"126","line":2,"column":9,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"125","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":25,"column":25,"nodeType":"129","endLine":25,"endColumn":90},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","'addPostActionCreator' is defined but never used.","'updatePostActionCreator' is defined but never used.","'React' is defined but never used.","'ChangeEvent' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]