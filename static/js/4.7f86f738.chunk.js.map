{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","utils/validators.ts","hoc/withAuthRedirect.tsx","assets/images/avatar.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","required","value","maxLengthCreator","maxLength","length","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","restProps","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","profile","s","description","src","photos","large","userPhoto","alt","Preloader","Post","post","message","likes","MyPosts","React","memo","postsElements","posts","map","p","id","myPosts","AddPostTextFormRedux","onSubmit","formData","addPost","newPostText","maxLength20","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","MyPostsContainer","profilePage","dispatch","addPostAC","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","toString","history","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.7f86f738.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2Nv7S\",\"error\":\"FormsControls_error__2VzmY\",\"formSummaryError\":\"FormsControls_formSummaryError__aOmkg\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\ntype InputType = {\r\n    name: string\r\n    onBlur: ()=>void\r\n    onChange: ()=>void\r\n    onDragStart: ()=>void\r\n    onDrop: ()=>void\r\n    onFocus: ()=>void\r\n    value: string\r\n}\r\ntype MetaType = {\r\n    active: boolean\r\n    asyncValidating: boolean\r\n    autofilled: boolean\r\n    dirty: boolean\r\n    dispatch: ()=>void\r\n    error: string\r\n    form: string\r\n    initial: undefined\r\n    invalid: boolean\r\n    pristine: boolean\r\n    submitFailed: boolean\r\n    submitting: boolean\r\n    touched: boolean\r\n    valid: boolean\r\n    visited: boolean\r\n    warning: undefined\r\n}\r\ntype PropsType = {\r\n    input: InputType\r\n    meta: MetaType\r\n    placeholder: string\r\n}\r\nexport const Textarea = ({input, meta,...props}: PropsType) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <>\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport const Input = ({input, meta,...props}: PropsType) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <>\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    </>\r\n}\r\n","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React, {ComponentType} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType =\r\n    {\r\n        isAuth: boolean\r\n    }\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'} />\r\n        return <Component {...restProps as T} />\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}","export default __webpack_public_path__ + \"static/media/avatar.68cdc451.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ProfileInfo_bg__3-drJ\",\"description\":\"ProfileInfo_description__3fgMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3Mbj9\",\"posts\":\"MyPosts_posts__3LCja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1-VPp\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusPropsType> = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '==='}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onChange={onStatusChange}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    </>\r\n\r\n}\r\n    ","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfilePropsType} from \"../Profile\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nexport const ProfileInfo: React.FC<ProfilePropsType> = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <img src={profile.photos.large !== null ? profile.photos.large : userPhoto} alt={'Avatar'}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport {PostType} from \"../../../../App\";\r\n\r\nexport const Post: React.FC<PostType> = props => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={\"https://image.freepik.com/free-vector/samurai-esports-logo-for-your-team_116205-81.jpg\"} alt=\"\"/>\r\n            {props.message}\r\n            <div>{`likes ${props.likes}`}</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {PostType} from \"../../../App\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostType>\r\n    addPost: (newPostText: string) => void\r\n    }\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo(props => {\r\n    const postsElements = props.posts.map(p => <Post id={p.id} message={p.message} likes={p.likes}/>)\r\n\r\n    const addPost = (formData: FormDataType) => {\r\n            props.addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <AddPostTextFormRedux onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n)\r\n})\r\n\r\ntype FormDataType = {\r\n    newPostText: string\r\n}\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nconst AddPostTextForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newPostText'\r\n                       placeholder='Post message'\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostTextFormRedux = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddPostTextForm)","import React from \"react\";\r\nimport {\r\n    addPostAC,\r\n    PostType\r\n} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    posts: PostType[]\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts)","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../api/api\";\r\n\r\nexport type ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = ({profile, status, updateStatus}) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile}\r\n                         status={status}\r\n                         updateStatus={updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {ProfileType} from \"../../api/api\";\r\n\r\ntype MapStatePropsType =\r\n    {\r\n        profile: ProfileType\r\n        status: string\r\n        authorizedUserId: number\r\n        isAuth: boolean\r\n    }\r\ntype MapDispatchPropsType =\r\n    {\r\n        getUserProfile: (userId: string) => void\r\n        getStatus: (userId: string) => void\r\n        updateStatus: (status: string) => void\r\n    }\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId.toString()\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}